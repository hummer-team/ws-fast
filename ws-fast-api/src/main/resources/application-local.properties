#
spring.jdbc.example_w.driverClassName=com.mysql.cj.jdbc.Driver
#please replace url,username,password
spring.jdbc.example_w.url=jdbc:mysql://rm-uf66mho6w264120j6.mysql.rds.aliyuncs.com:3306/delivery?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf8
spring.jdbc.example_w.username=root
spring.jdbc.example_w.password=****
spring.jdbc.example_w.initialSize=3
spring.jdbc.example_w.minIdle=30
spring.jdbc.example_w.maxActive=50
spring.jdbc.example_w.maxWait=60000
spring.jdbc.example_w.timeBetweenEvictionRunsMillis=60000
spring.jdbc.example_w.minEvictableIdleTimeMillis=300000
spring.jdbc.example_w.maxPoolPreparedStatementPerConnectionSize=20
spring.jdbc.example_w.connectionProperties=socketTimeout=3000;connectTimeout=3000
#global sql command execute timeout second
spring.jdbc.example_w.queryTimeout=15
#hikari config
#db poll driver use hikari
spring.jdbc.example_w.poolDriverType=hikari
spring.jdbc.example_w.hikariConnMaxLifetimeMs=1800000
spring.jdbc.example_w.hikariConnIdleTimeoutMs=30000
spring.jdbc.example_w.hikariConnTimeoutMs=3000
#hummer cfg
#
mybatis.base.package=io.ws.fast.dao
mybatis.example_w.dao.interface.package=io.ws.fast.dao
mybatis.example_w.resource.mapper=classpath*:mapper/*.xml
mybatis.example_w.po.package=io.ws.fast.support.model.po
#PROTOSTUFF_BINARY,PROTOSTUFF_JSON, MSG_PACK_BINARY,MSG_PACK_JSON, FAST_JSON
hummer.http.message.coder=MSG_PACK_BINARY
#
logging.config=classpath:log4j2-local.xml

#redis
redis.simple.host=127.0.0.1
redis.simple.port=6379
redis.simple.password=
redis.simple.pool.max-total=10
redis.simple.pool.max-idle=10
redis.simple.pool.max-wait=6000
redis.simple.db.index=1
#swagger
springdoc.swagger.title=API list
springdoc.swagger.contact=ws-fast
springdoc.swagger.version=2.0
#set service description
springdoc.swagger.description=this is ws-fast api
#set scan package
springdoc.packages-to-scan[0]=io.ws.fast.api.controller
springdoc.api-docs.version=OPENAPI_3_1
#nacos config center,if nacos.config.server-addr is null then disable start config center
nacos.config.server-addr=
#disabled config center: ns.group=config_ns_01
nacos.config.ns.group=
#please replace xxx business config namespace value
nacos.config.ids.xxx=application.properties,application-logger.properties
nacos.config.group.xxx=DEFAULT_GROUP,DEFAULT_GROUP
nacos.config.type.xxx=properties,properties
#service discovery
spring.cloud.nacos.discovery.enabled=false
spring.cloud.nacos.discovery.register-enabled=false
#discovery center addr
spring.cloud.nacos.server-addr=
spring.cloud.nacos.discovery.namespace=gateway
# if nacos enable user and password author then settings The following two sets of configurations
#spring.cloud.nacos.discovery.username=nacos
#spring.cloud.nacos.discovery.password=nacos